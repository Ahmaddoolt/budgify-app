import 'package:budgify/domain/models/currency.dart';

/// A comprehensive list of world currencies.
/// The 'name' is now handled by GetX translations using the 'code' as a key.
const List<Currency> availableCurrencies = [
  Currency(code: 'AFN', symbol: '؋'),
  Currency(code: 'ALL', symbol: 'L'),
  Currency(code: 'DZD', symbol: 'د.ج'),
  Currency(code: 'AOA', symbol: 'Kz'),
  Currency(code: 'ARS', symbol: '\$'),
  Currency(code: 'AMD', symbol: '֏'),
  Currency(code: 'AUD', symbol: 'A\$'),
  Currency(code: 'AZN', symbol: '₼'),
  Currency(code: 'BSD', symbol: 'B\$'),
  Currency(code: 'BHD', symbol: '.د.ب'),
  Currency(code: 'BDT', symbol: '৳'),
  Currency(code: 'BBD', symbol: 'Bds\$'),
  Currency(code: 'BYN', symbol: 'Br'),
  Currency(code: 'BZD', symbol: 'BZ\$'),
  Currency(code: 'BOB', symbol: 'Bs.'),
  Currency(code: 'BAM', symbol: 'KM'),
  Currency(code: 'BWP', symbol: 'P'),
  Currency(code: 'BRL', symbol: 'R\$'),
  Currency(code: 'GBP', symbol: '£'),
  Currency(code: 'BND', symbol: 'B\$'),
  Currency(code: 'BGN', symbol: 'лв'),
  Currency(code: 'BIF', symbol: 'FBu'),
  Currency(code: 'KHR', symbol: '៛'),
  Currency(code: 'CAD', symbol: 'C\$'),
  Currency(code: 'CVE', symbol: 'Esc'),
  Currency(code: 'XAF', symbol: 'FCFA'),
  Currency(code: 'CLP', symbol: '\$'),
  Currency(code: 'CNY', symbol: '¥'),
  Currency(code: 'COP', symbol: '\$'),
  Currency(code: 'KMF', symbol: 'CF'),
  Currency(code: 'CDF', symbol: 'FC'),
  Currency(code: 'CRC', symbol: '₡'),
  Currency(code: 'CUP', symbol: '\$'),
  Currency(code: 'CZK', symbol: 'Kč'),
  Currency(code: 'DKK', symbol: 'kr'),
  Currency(code: 'DJF', symbol: 'Fdj'),
  Currency(code: 'DOP', symbol: 'RD\$'),
  Currency(code: 'XCD', symbol: 'EC\$'),
  Currency(code: 'EGP', symbol: 'E£'),
  Currency(code: 'ERN', symbol: 'Nfk'),
  Currency(code: 'ETB', symbol: 'Br'),
  Currency(code: 'EUR', symbol: '€'),
  Currency(code: 'FJD', symbol: 'FJ\$'),
  Currency(code: 'GMD', symbol: 'D'),
  Currency(code: 'GEL', symbol: '₾'),
  Currency(code: 'GHS', symbol: 'GH₵'),
  Currency(code: 'GTQ', symbol: 'Q'),
  Currency(code: 'GNF', symbol: 'FG'),
  Currency(code: 'GYD', symbol: 'G\$'),
  Currency(code: 'HTG', symbol: 'G'),
  Currency(code: 'HNL', symbol: 'L'),
  Currency(code: 'HKD', symbol: 'HK\$'),
  Currency(code: 'HUF', symbol: 'Ft'),
  Currency(code: 'ISK', symbol: 'kr'),
  Currency(code: 'INR', symbol: '₹'),
  Currency(code: 'IDR', symbol: 'Rp'),
  Currency(code: 'IRR', symbol: '﷼'),
  Currency(code: 'IQD', symbol: 'ع.د'),
  Currency(code: 'ILS', symbol: '₪'),
  Currency(code: 'JMD', symbol: 'J\$'),
  Currency(code: 'JPY', symbol: '¥'),
  Currency(code: 'JOD', symbol: 'JD'),
  Currency(code: 'KZT', symbol: '₸'),
  Currency(code: 'KES', symbol: 'KSh'),
  Currency(code: 'KWD', symbol: 'د.ك'),
  Currency(code: 'KGS', symbol: 'с'),
  Currency(code: 'LAK', symbol: '₭'),
  Currency(code: 'LBP', symbol: 'ل.ل'),
  Currency(code: 'LSL', symbol: 'L'),
  Currency(code: 'LRD', symbol: 'L\$'),
  Currency(code: 'LYD', symbol: 'ل.د'),
  Currency(code: 'MKD', symbol: 'ден'),
  Currency(code: 'MGA', symbol: 'Ar'),
  Currency(code: 'MWK', symbol: 'MK'),
  Currency(code: 'MYR', symbol: 'RM'),
  Currency(code: 'MVR', symbol: 'Rf'),
  Currency(code: 'MRU', symbol: 'UM'),
  Currency(code: 'MUR', symbol: '₨'),
  Currency(code: 'MXN', symbol: 'Mex\$'),
  Currency(code: 'MNT', symbol: '₮'),
  Currency(code: 'MAD', symbol: 'د.م.'),
  Currency(code: 'MZN', symbol: 'MT'),
  Currency(code: 'MMK', symbol: 'K'),
  Currency(code: 'NAD', symbol: 'N\$'),
  Currency(code: 'NPR', symbol: '₨'),
  Currency(code: 'NZD', symbol: 'NZ\$'),
  Currency(code: 'NIO', symbol: 'C\$'),
  Currency(code: 'NGN', symbol: '₦'),
  Currency(code: 'KPW', symbol: '₩'),
  Currency(code: 'NOK', symbol: 'kr'),
  Currency(code: 'OMR', symbol: 'ر.ع.'),
  Currency(code: 'PKR', symbol: '₨'),
  Currency(code: 'PAB', symbol: 'B/.'),
  Currency(code: 'PGK', symbol: 'K'),
  Currency(code: 'PYG', symbol: '₲'),
  Currency(code: 'PEN', symbol: 'S/'),
  Currency(code: 'PHP', symbol: '₱'),
  Currency(code: 'PLN', symbol: 'zł'),
  Currency(code: 'QAR', symbol: 'ر.ق'),
  Currency(code: 'RON', symbol: 'lei'),
  Currency(code: 'RUB', symbol: '₽'),
  Currency(code: 'RWF', symbol: 'RF'),
  Currency(code: 'WST', symbol: 'T'),
  Currency(code: 'STN', symbol: 'Db'),
  Currency(code: 'SAR', symbol: '﷼'),
  Currency(code: 'RSD', symbol: 'дин.'),
  Currency(code: 'SCR', symbol: 'SR'),
  Currency(code: 'SLL', symbol: 'Le'),
  Currency(code: 'SGD', symbol: 'S\$'),
  Currency(code: 'SBD', symbol: 'SI\$'),
  Currency(code: 'SOS', symbol: 'Sh'),
  Currency(code: 'ZAR', symbol: 'R'),
  Currency(code: 'KRW', symbol: '₩'),
  Currency(code: 'SSP', symbol: 'SS£'),
  Currency(code: 'LKR', symbol: 'Rs'),
  Currency(code: 'SDG', symbol: 'ج.س.'),
  Currency(code: 'SRD', symbol: '\$'),
  Currency(code: 'SEK', symbol: 'kr'),
  Currency(code: 'CHF', symbol: 'Fr'),
  Currency(code: 'SYP', symbol: '£S'),
  Currency(code: 'TWD', symbol: 'NT\$'),
  Currency(code: 'TJS', symbol: 'SM'),
  Currency(code: 'TZS', symbol: 'TSh'),
  Currency(code: 'THB', symbol: '฿'),
  Currency(code: 'TOP', symbol: 'T\$'),
  Currency(code: 'TTD', symbol: 'TT\$'),
  Currency(code: 'TND', symbol: 'د.ت'),
  Currency(code: 'TRY', symbol: '₺'),
  Currency(code: 'TMT', symbol: 'm'),
  Currency(code: 'UGX', symbol: 'USh'),
  Currency(code: 'UAH', symbol: '₴'),
  Currency(code: 'AED', symbol: 'د.إ'),
  Currency(code: 'USD', symbol: '\$'),
  Currency(code: 'UYU', symbol: '\$U'),
  Currency(code: 'UZS', symbol: 'soʻm'),
  Currency(code: 'VUV', symbol: 'VT'),
  Currency(code: 'VES', symbol: 'Bs.'),
  Currency(code: 'VND', symbol: '₫'),
  Currency(code: 'XOF', symbol: 'CFA'),
  Currency(code: 'YER', symbol: '﷼'),
  Currency(code: 'ZMW', symbol: 'ZK'),
  Currency(code: 'ZWL', symbol: 'Z\$'),
];

/// Helper function to find a currency by its code.
/// This is crucial for retrieving the stored user preference.
Currency findCurrencyByCode(String code) {
  // Find the currency by its unique code.
  // Default to USD if the code is not found for any reason (e.g., legacy data).
  return availableCurrencies.firstWhere(
    (c) => c.code == code,
    orElse: () => availableCurrencies.firstWhere((c) => c.code == 'USD'),
  );
}
